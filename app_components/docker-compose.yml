version: '3.9'

services:
  db:
    container_name: postgres-db
    image: postgres:13
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  etl:
    container_name: etl
    build:
      context: ./etl
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env    
    volumes:
      - ./etl:/etl
    depends_on: 
      db:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  api:
    container_name: loyalty_api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 8008:8000
    volumes:
      - ./api:/api
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy

  ds:
    container_name: ds_service
    build:
      context: ./ds
      dockerfile: Dockerfile
    volumes:
      - ./ds:/ds
    ports:
      - "3000:3000"
    env_file:
      - ./.env  
    depends_on:
      - db
      
  front:
    container_name: streamlit_front
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front:/front
    ports:
      - 8501:8501
    env_file:
      - .env
    environment:
      - API_URL=http://back:8000
    depends_on:
      - api